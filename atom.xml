<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TMD Life</title>
  
  <subtitle>TMD=ToMmyDong</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.tommydong.life/"/>
  <updated>2020-04-30T14:38:04.197Z</updated>
  <id>https://blog.tommydong.life/</id>
  
  <author>
    <name>ToMmyDong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Apirl20 Vim 筆記</title>
    <link href="https://blog.tommydong.life/2020/04/30/Apirl20-Vim-%E7%AD%86%E8%A8%98/"/>
    <id>https://blog.tommydong.life/2020/04/30/Apirl20-Vim-筆記/</id>
    <published>2020-04-30T14:18:38.000Z</published>
    <updated>2020-04-30T14:38:04.197Z</updated>
    
    <content type="html"><![CDATA[<h2 id="動機"><a href="#動機" class="headerlink" title="動機"></a>動機</h2><p>其實我最早用 terminal editor 是 emacs (一個學長推坑的)，但是一直沒有摸熟 emacs 複雜的功能，再加上沒有特別喜歡把各種功能放在編輯器的感覺，所以一陣子就退坑了。在選訓營一階，看到有朋友用 vim，覺得有點好奇，就稍微入坑了一下，發現還蠻快上手，用起來很有手感。</p><h2 id="到底差再那？"><a href="#到底差再那？" class="headerlink" title="到底差再那？"></a>到底差再那？</h2><p>對我來說，vim 跟普通的編輯器差別就在於他把 “輸入” 跟 “編輯” 劃分得很清楚。普通的編輯器在循序輸入時沒什麼太大的問題，但是在做一些跳來跳去的移動或修改，往往會需要一點功夫，甚至要把手放到滑鼠上控制。而 vim 的作法大概是把這些編輯的動作，用一套有邏輯的語言描述，透過成千上萬的語法組合，就很容易有鍵盤去描述你想達到的操作，所以我認為在 “編輯” 上，vim 有一些優勢。</p><h2 id="入坑之路"><a href="#入坑之路" class="headerlink" title="入坑之路"></a>入坑之路</h2><p>一開始入坑，我大概刷了兩三次 vimtutor，認識一些語法。後來就在練習競程的時候使用 vim，過了一兩天發現我根本就幾乎停在 insert mode，變得比一般的編輯器更難使用。我大概在網路上查了一下，有人建議把 arrow keys 關掉。又試了一兩天，感覺稍微好了一些。又看到有人建議裝 HardMode 這個套件，ban 掉連續案兩次 ijkl。最後我開始習慣用一些比較精簡的方式控制 vim，速度大概有提昇不少，開始有覺得比平常編輯器好用一些。</p><h2 id="Vim-in-TOI"><a href="#Vim-in-TOI" class="headerlink" title="Vim in TOI"></a>Vim in TOI</h2><p>這個月我做了一個有點衝動的決定: 在 TOI 三四模使用 vim。雖然我知道比賽要盡可能保持穩定，千萬不要亂嘗試做死。不過因為二階有點戒不掉用 vim，所以最後決定就還是大膽給他用下去好了。結果沒想到效果還不差，賽中沒有因為 vim 而在 coding 上耍雷，頂多是開賽多了 1 分鐘把那我覺得很必要的 vimrc 打進去而已。</p><h2 id="黑特中文"><a href="#黑特中文" class="headerlink" title="黑特中文"></a>黑特中文</h2><p>雖然我覺得 vim 大多很美好，不過輸入中文真的還是得抱怨一下，用起來完全不友善，還沒查有什麼好的解法:P</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;動機&quot;&gt;&lt;a href=&quot;#動機&quot; class=&quot;headerlink&quot; title=&quot;動機&quot;&gt;&lt;/a&gt;動機&lt;/h2&gt;&lt;p&gt;其實我最早用 terminal editor 是 emacs (一個學長推坑的)，但是一直沒有摸熟 emacs 複雜的功能，再加上沒有特別喜
      
    
    </summary>
    
    
      <category term="程式" scheme="https://blog.tommydong.life/tags/%E7%A8%8B%E5%BC%8F/"/>
    
      <category term="學習" scheme="https://blog.tommydong.life/tags/%E5%AD%B8%E7%BF%92/"/>
    
  </entry>
  
  <entry>
    <title>隱藏的幾篇文章</title>
    <link href="https://blog.tommydong.life/2020/04/18/%E9%9A%B1%E8%97%8F%E7%9A%84%E5%B9%BE%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <id>https://blog.tommydong.life/2020/04/18/隱藏的幾篇文章/</id>
    <published>2020-04-18T08:28:24.000Z</published>
    <updated>2020-04-18T08:32:55.520Z</updated>
    
    <content type="html"><![CDATA[<p>不太喜歡別人當面討論我的文章，尤其是比較負面的那些。所以前幾天我臨時把 blog 扯下來，現在把那些負面文章隱藏起來放上線了，如果真的想看的人再發 mail 到 tmd279936@gmail.com 我再考慮看看吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;不太喜歡別人當面討論我的文章，尤其是比較負面的那些。所以前幾天我臨時把 blog 扯下來，現在把那些負面文章隱藏起來放上線了，如果真的想看的人再發 mail 到 tmd279936@gmail.com 我再考慮看看吧。&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="blog" scheme="https://blog.tommydong.life/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>March20 Top Tree 筆記</title>
    <link href="https://blog.tommydong.life/2020/03/30/March20-Top-Tree-%E7%AD%86%E8%A8%98/"/>
    <id>https://blog.tommydong.life/2020/03/30/March20-Top-Tree-筆記/</id>
    <published>2020-03-30T05:33:16.000Z</published>
    <updated>2020-04-16T01:13:39.858Z</updated>
    
    <content type="html"><![CDATA[<p>這個月的題目是被 ut 學長推坑的 Top Tree，他是一個處理樹問題的資料結構，之前大概看過概念，這次稍微學了一點點的實做。</p><h2 id="應用"><a href="#應用" class="headerlink" title="應用"></a>應用</h2><p>分治處理點對之間的問題，例如動態改邊權，詢問樹直徑。</p><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>Top Tree 的概念是把一棵樹 T 轉成由 Cluster 組成的二元樹。Cluster 就是一些由邊組成的連通塊，滿足與非 Cluster 內的邊接觸到的點最多兩個。Cluster 最小單位是每一條邊，兩個交集為一個點的 Clusters 可以透過 Rake or Compress 合併。</p><p>可以透過不斷的兩兩合併，把一棵樹合併成一個 Cluster，每個 Cluster 紀錄關心的答案就可以了。</p><h3 id="Rake"><a href="#Rake" class="headerlink" title="Rake"></a>Rake</h3><p>把一個葉子的邊合併到另一個邊上</p><h3 id="Compress"><a href="#Compress" class="headerlink" title="Compress"></a>Compress</h3><p>把一個 degree = 2 的點旁邊的兩條邊合併</p><h3 id="複雜度"><a href="#複雜度" class="headerlink" title="複雜度"></a>複雜度</h3><p>因為一顆樹 degree &gt; 2 的節點不超過一半，所以每一層合併，大概可以消掉一半的節點(不過會有常數個節點重複到)，因此複雜度是 O(logN) 層。</p><h2 id="實做"><a href="#實做" class="headerlink" title="實做"></a>實做</h2><p>實做部份我是學 bb 學長的<a href="https://codeforces.com/contest/1192/submission/67652376" target="_blank" rel="noopener">方法</a>，寫法非常精湛，可以比 Centroid Decomposition 輕鬆。</p><p>大概就是不斷的 greedy 選擇 maximal 的合併，持續掃整張圖，直到剩下一個 root cluster。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;這個月的題目是被 ut 學長推坑的 Top Tree，他是一個處理樹問題的資料結構，之前大概看過概念，這次稍微學了一點點的實做。&lt;/p&gt;
&lt;h2 id=&quot;應用&quot;&gt;&lt;a href=&quot;#應用&quot; class=&quot;headerlink&quot; title=&quot;應用&quot;&gt;&lt;/a&gt;應用&lt;/h2&gt;&lt;
      
    
    </summary>
    
    
      <category term="程式競賽" scheme="https://blog.tommydong.life/tags/%E7%A8%8B%E5%BC%8F%E7%AB%B6%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>TOI 2020 一階紀錄</title>
    <link href="https://blog.tommydong.life/2020/03/28/TOI-2020-%E4%B8%80%E9%9A%8E%E7%B4%80%E9%8C%84/"/>
    <id>https://blog.tommydong.life/2020/03/28/TOI-2020-一階紀錄/</id>
    <published>2020-03-28T14:27:07.000Z</published>
    <updated>2020-04-16T01:13:39.858Z</updated>
    
    <content type="html"><![CDATA[<p>選訓營是高中程式競賽最神聖的一場比賽，除了選拔國手之外，也是有利升學的重要考試。</p><p>今年的 TOI 的故事大概要從全國賽開始說起，去年 12 月的全國賽拿了第八名，當時其實是有點沮喪。沒有花時間讀學測的我，看著大家的實力增進，決定寒假更努力練習。寒假參加了 IOICamp 後訂了一個有點辛苦的計畫，最後因為壓力太大，不但沒有達成，反而陷入了負面循環，不太能思考學習。因此我開始把心態調整當作重要的練習項目，練習發揮自己的能力。</p><p>一下子時間就來到了一階選訓營，今年選訓因為疫情，住宿升級成一間旅館，上課改成線上。其他的部份跟去年的其實沒差很多，唯獨氣氛有稍微比較緊張一些。前國手也來講了不少課，放學偶爾也有來我們房間聊聊天，超讚的。</p><p>一模前我訂的計畫是每題都先拿至少一個 subtask 再開賽，策略是有算執行成功，但結果是到最後沒有完整的解出任何一題。因為一模有點難， subtask 又算高分，所以我沒有 AC 任何一題就拿到了第四名。主要的時間還是花在 pC 的一題複雜 dp 上面，其中最多人解的題一開始被我 tag 成毒瘤演算法就被丟掉了。</p><p>因為一模沒解出任何一題實在是很有風險的打法(依賴 subtask 豐盛程度)，所以二模我的目標改成以 AC 一題為目標。二模開賽我的狀況非常慘烈，一開始讀完題目後，估計 subtask 大概沒有 50 分就開始有點緊張。經過好幾次的廁所時間，我突然閃過 pA 的想法。透過一點點的驗證，我開始嘗試寫 pA。 pA 跟一模 pC 一樣，是我不太擅長的 DP。Code 實做的沒有很理想，加上一些奇怪的邊界條件需要判斷，不斷的 Wrong Answer。重新檢視了作法之後，找到了幾個 bug，從 Wrong Answer 變成了 TLE。這時候 Judge 開始停滯，壓了 TLE 的 code 上傳，卻拿不到結果。在沒有 Judge 的情況下，變得更加緊張，沒有辦法好好的抓 Subtask。不過最後幾分鐘看到之前傳的 pA 拿到了 AC，終於進二階了!</p><p>今年的選訓營，我沒太刷太多的題目，主要是心態的調整。結果上來說，兩次的考試雖然狀況都蠻曲折的，但是最後都要辦法用不同的方法穩住。跟去年比起來，在高壓的條件上，成功的表現了實力，應該是今年最大的進步了吧。</p><p><img src="https://i.imgur.com/tCMvDBz.jpg" alt="Imgur"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;選訓營是高中程式競賽最神聖的一場比賽，除了選拔國手之外，也是有利升學的重要考試。&lt;/p&gt;
&lt;p&gt;今年的 TOI 的故事大概要從全國賽開始說起，去年 12 月的全國賽拿了第八名，當時其實是有點沮喪。沒有花時間讀學測的我，看著大家的實力增進，決定寒假更努力練習。寒假參加了 IO
      
    
    </summary>
    
    
      <category term="程式競賽" scheme="https://blog.tommydong.life/tags/%E7%A8%8B%E5%BC%8F%E7%AB%B6%E8%B3%BD/"/>
    
      <category term="TOI" scheme="https://blog.tommydong.life/tags/TOI/"/>
    
      <category term="選訓營" scheme="https://blog.tommydong.life/tags/%E9%81%B8%E8%A8%93%E7%87%9F/"/>
    
  </entry>
  
  <entry>
    <title>Feburary20 Matroid Intersection 筆記</title>
    <link href="https://blog.tommydong.life/2020/02/22/Feburary20-Matroid-Intersection-%E7%AD%86%E8%A8%98/"/>
    <id>https://blog.tommydong.life/2020/02/22/Feburary20-Matroid-Intersection-筆記/</id>
    <published>2020-02-22T08:27:55.000Z</published>
    <updated>2020-04-16T01:13:39.858Z</updated>
    
    <content type="html"><![CDATA[<p>這個月學的東西算是延伸上個月的東西，學了 Matroid Intersection。雖然在競賽中遇到的機率大概是 0，不過這個主題我覺得很有趣，可以抽象化很多問題。</p><h2 id="學習材料"><a href="#學習材料" class="headerlink" title="學習材料"></a>學習材料</h2><p>這次查的資料是:<br><a href="https://codeforces.com/blog/entry/69287" target="_blank" rel="noopener">Matroid intersection in simple words</a></p><p>資料有點長，加上理解總共花了三個小時。</p><h2 id="唬爛聲明"><a href="#唬爛聲明" class="headerlink" title="唬爛聲明"></a>唬爛聲明</h2><p>這次的數學我也是沒有背景的，所以非常可能寫錯，歡迎更正。</p><h2 id="Matroid"><a href="#Matroid" class="headerlink" title="Matroid"></a>Matroid</h2><h3 id="定義"><a href="#定義" class="headerlink" title="定義"></a>定義</h3><p>中文好像叫擬陣，是一種比較抽象的獨立概念。從獨立性的角度來看， matroid 就是 (E,I)，E 是一個有限的集合，I 是 E 所有獨立的 subset。這邊的獨立性要滿足三個條件。</p><ol><li>空集合獨立</li><li>獨立集合的子集合獨立</li><li>兩個獨立集合 A, B，若 A 比 B 大，在 A\B 中必可找到一個元素滿足加入 B 依舊獨立</li></ol><h4 id="Bases"><a href="#Bases" class="headerlink" title="Bases"></a>Bases</h4><p>大小最大的獨立子集合”們” (其實就是 basis 的複數啦)</p><h4 id="Circuites"><a href="#Circuites" class="headerlink" title="Circuites"></a>Circuites</h4><p>除了本身以外，所有子集合都獨立的集合</p><h4 id="Ranking-function"><a href="#Ranking-function" class="headerlink" title="Ranking function"></a>Ranking function</h4><p>R(S) 表示 S bases 的大小</p><h4 id="Independence-oracle"><a href="#Independence-oracle" class="headerlink" title="Independence oracle"></a>Independence oracle</h4><p>一個可以判斷是否獨立的函數</p><h3 id="生活中的-Matroid"><a href="#生活中的-Matroid" class="headerlink" title="生活中的 Matroid"></a>生活中的 Matroid</h3><p>有了這樣的定義生活中會出現很多 matroid，matroid 的發源地 vector 本身就是一個例子。又比如說無相圖如果定義沒有環代表獨立的話，可以視為一個 Matroid，那麼他的 Bases 就是 spanning forests。</p><h3 id="Rado-Edmonds-algorithm"><a href="#Rado-Edmonds-algorithm" class="headerlink" title="Rado-Edmonds algorithm"></a>Rado-Edmonds algorithm</h3><p>Kruskal’s algorithm 的 general case，證明照著 weight 排序，不斷加入元素判斷獨立性可以夠出 minimum basis。</p><h2 id="Matroid-Intersection"><a href="#Matroid-Intersection" class="headerlink" title="Matroid Intersection"></a>Matroid Intersection</h2><p>給你兩個 matroid $m_1 = (X,I_1), m_2 = (X, I_2)，$求 $I_1 \cap I_2$ 中最大集合。</p><p>這其實是不好解的問題，不過有些特例我們可能很熟悉，比如說二分圖最大匹配。</p><h3 id="推導過程"><a href="#推導過程" class="headerlink" title="推導過程"></a>推導過程</h3><p>有點太複雜，我就簡單寫個流程就好，細節要看 blog。</p><ol><li>我們可以透過替換元素，把獨立集合變換成另一個獨立集合</li><li>任兩個同大小 bases 可以透過上面的方法變換 “strong basis exchange”</li><li>我們構造一張圖二分圖 $D_M(S)$ S 是一個獨立集合，左集合是 S, 右集合是 X\S。兩點存在邊 iff 可以替換這兩個元素並保持獨立性</li><li>basis exchange 其實就是二分圖匹配，每個 basis exchange 都有對應的匹配。但不是匹配都可以對應 exchange，因為有些匹配順序可能構出 circuit。</li><li>basis -&gt; circuit 的轉換一定有兩種以上順序，反言之只有唯一交換順序的都是 basis exchange。</li><li>matroid intersection 其實就是在兩張共用點集的 $D_M(S)$ 圖上面找一組匹配，做 basis exchange。</li></ol><h3 id="演算法"><a href="#演算法" class="headerlink" title="演算法"></a>演算法</h3><p>先跳出來講算法一下，考慮增廣方法從空集合開始找獨立集合。</p><ol><li>while (true)</li><li>X\S 可以加入 S 滿足 $M_1$ 的叫 $Y_1$，滿足 $M_2$ 的叫 $Y_2$。</li><li>如果 $Y_1, Y_2$ 有交集那就增廣 S, continue</li><li>建立 $D_M(S)$，對於每個 $M_1$ 的邊建左到右，$M_2$ 建反方向。</li><li>如果沒有 $Y_1$ 到 $Y_2$ 的路徑就 break</li><li>否則把路徑上在左邊的元素增廣成右邊的元素</li></ol><p>大成功!!</p><h3 id="繼續推導"><a href="#繼續推導" class="headerlink" title="繼續推導"></a>繼續推導</h3><p>來稍微解釋一下發生什麼事</p><ol><li>存在路徑就存在最短路，最短路是要確保唯一性，讓他成為 basis exchange</li><li>加入一個和全世界獨立的虛擬元素，可以讓剛剛的路徑變成環</li><li>環的奇數是 $M_1$ 的匹配 偶數是 $M_2$ 的</li><li>$M_1, M_2$ 透過唯一匹配可以達成 basis exchange</li><li>因為有一個點是虛擬的 所以實際上我們可以透過這樣增廣集合大小 1</li></ol><h3 id="最佳性"><a href="#最佳性" class="headerlink" title="最佳性"></a>最佳性</h3><p>證明增廣是最佳的有點複雜，還是看一下資料比較好。</p><h2 id="實做"><a href="#實做" class="headerlink" title="實做"></a>實做</h2><p>因為 matroid 是抽象的，所以實做跟你應用在哪有關。一些實例上的優化也看一下資料吧。</p><h2 id="Checklist"><a href="#Checklist" class="headerlink" title="Checklist"></a>Checklist</h2><p>幾個檢查的小問題</p><ul><li>為什麼要找最短路</li><li>TSP 跟 matroid intersection 有何關係</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;這個月學的東西算是延伸上個月的東西，學了 Matroid Intersection。雖然在競賽中遇到的機率大概是 0，不過這個主題我覺得很有趣，可以抽象化很多問題。&lt;/p&gt;
&lt;h2 id=&quot;學習材料&quot;&gt;&lt;a href=&quot;#學習材料&quot; class=&quot;headerlink&quot; t
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>January20 線性基筆記</title>
    <link href="https://blog.tommydong.life/2020/01/31/January20-%E7%B7%9A%E6%80%A7%E5%9F%BA%E7%AD%86%E8%A8%98/"/>
    <id>https://blog.tommydong.life/2020/01/31/January20-線性基筆記/</id>
    <published>2020-01-31T12:16:13.000Z</published>
    <updated>2020-04-16T01:13:39.858Z</updated>
    
    <content type="html"><![CDATA[<p>新年新希望是每個月學一個新東西，這個月初在 IOICamp，月底在過年加上小感冒。到了最後一天才想起來要學東西，就挑了一個之前看過只是不太熟的主題。之後應該會排一個表，記下想學的東西，不過其實我不太會找資料，所以如果有推薦的知識會技能有可以來跟我講喔!</p><ul><li><a href="https://codeforces.com/blog/entry/68953" target="_blank" rel="noopener">A Beautiful Technique for Some XOR Related Problems</a></li><li><a href="线性基学习笔记">https://blog.sengxian.com/algorithms/linear-basis</a></li></ul><p>中英對照確認對方沒有唬爛(x</p><h2 id="唬爛聲明"><a href="#唬爛聲明" class="headerlink" title="唬爛聲明"></a>唬爛聲明</h2><p>本人沒有真的學過線性代數，所以內容極度可能有誤，不過程式的部份問題可能不大，還是可以參考看看XD (歡迎幫我更正內容)</p><h2 id="應用"><a href="#應用" class="headerlink" title="應用"></a>應用</h2><p>有一個整數集合，求跟他們子集合 xor 值的集合相關的問題。</p><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>我覺得蠻有趣的，首先 ${a}$ 的子集合可以滿足向量空間定義。</p><p>每個整數可以當作長度為 d 的二進位字串，也可以表示成 $\mathbb{Z_2^d}$。而 xor 就是這些向量的加法，子集合(選和不選) 意義就是向量乘上常數${0,1}$。</p><p>所以子集合的 xor 就是這些向量的線性組合，集合其實就是這些向量的 span。</p><p>因此根據線性代數的一點證明 (沒很複雜，只是看過一次)，這些向量的 basis 只會有最多 d 個。換句話說，可以找到小於 d 個向量，這些向量的 span 和 a 集合相同。</p><p>因此我們只要找出這 d 個向量，就可以把原本跟 $O(N)$ 相關的複雜度變成 $O(logC)$，比如說枚舉本來是 $O(2^N)$ 就可以變成 $O(C)$。</p><p>實際上作法不複雜，其實就是做高斯消去法，因為向量做行運算不影響獨立性。所以消完之後，對角線上是 on 的向量就是 basis。實做上簡體 blog 有消乾淨，CF 的 blog 只消到三角矩陣。實際上沒有太大的差別，只是早做晚做的問題。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXD = <span class="number">31</span>;</span><br><span class="line"><span class="keyword">int</span> basis[MAXD], sz;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addVector</span> <span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=MAXD; i&gt;=<span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((x &gt;&gt; i) &amp; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (basis[i] == <span class="number">0</span>) &#123;</span><br><span class="line">                basis[i] = x;</span><br><span class="line">                sz++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                x ^= basis[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>理論上高斯消去法複雜度是 $O(Nd^2)$ 實際上因為是位元向量，所以可以用整數位元運算或 <code>bitset</code> 壓 64 倍左右的常數。假設題目的範圍是 int，上面的 code 就變成 O(Nd)。</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p>子集 Xor 的集合 $S := span(a), Basis:= B$</p><ol><li>S 集合大小?<ul><li>Ans: $O(2^{|B|})$</li></ul></li><li>$max{S}$<ul><li>Ans: greedy 從 basis 構造 high bit to low bit</li></ul></li><li>S 裡值為 x 的有幾個<ul><li>先檢查答案是不是 0</li><li>否則就是 $O(2^{|S|-|B|})$</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;新年新希望是每個月學一個新東西，這個月初在 IOICamp，月底在過年加上小感冒。到了最後一天才想起來要學東西，就挑了一個之前看過只是不太熟的主題。之後應該會排一個表，記下想學的東西，不過其實我不太會找資料，所以如果有推薦的知識會技能有可以來跟我講喔!&lt;/p&gt;
&lt;ul&gt;
&lt;
      
    
    </summary>
    
    
      <category term="程式競賽" scheme="https://blog.tommydong.life/tags/%E7%A8%8B%E5%BC%8F%E7%AB%B6%E8%B3%BD/"/>
    
      <category term="學習" scheme="https://blog.tommydong.life/tags/%E5%AD%B8%E7%BF%92/"/>
    
  </entry>
  
  <entry>
    <title>Hello 2020</title>
    <link href="https://blog.tommydong.life/2020/01/04/Hello-2020/"/>
    <id>https://blog.tommydong.life/2020/01/04/Hello-2020/</id>
    <published>2020-01-04T15:46:22.000Z</published>
    <updated>2020-04-16T01:13:39.858Z</updated>
    
    <content type="html"><![CDATA[<h2 id="new-year-resolution"><a href="#new-year-resolution" class="headerlink" title="new year resolution"></a>new year resolution</h2><p>聽說新年新希望總是無法堅持，沒有試過所以來試試 :)</p><h2 id="立-flag"><a href="#立-flag" class="headerlink" title="立 flag"></a>立 flag</h2><ul><li>每天: 運動</li><li>每個禮拜: 參加一場演算法比賽</li><li>每個月: 學一個新東西</li><li>每季: 讀一本書</li><li>2020: CF 上一次紅色</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;new-year-resolution&quot;&gt;&lt;a href=&quot;#new-year-resolution&quot; class=&quot;headerlink&quot; title=&quot;new year resolution&quot;&gt;&lt;/a&gt;new year resolution&lt;/h2&gt;&lt;p&gt;聽說
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Goodbye 2019</title>
    <link href="https://blog.tommydong.life/2020/01/01/Goodbye-2019/"/>
    <id>https://blog.tommydong.life/2020/01/01/Goodbye-2019/</id>
    <published>2020-01-01T14:37:32.000Z</published>
    <updated>2020-04-16T01:13:39.858Z</updated>
    
    <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>改變</p><h1 id="改變的一年"><a href="#改變的一年" class="headerlink" title="改變的一年"></a>改變的一年</h1><p>年初印象中大多在練習程式競賽，參加了 <a href="http://blog.tommydong.life/2019/02/03/IOICamp-2019/">IOICamp</a>。</p><h2 id="春"><a href="#春" class="headerlink" title="春"></a>春</h2><p>開學過後，迎接我的是選訓營和科學班成果發表。科學班在高二要到清大進行專題研究，在下學期辦一場成果發表會。我選擇做人工智慧的專題，不過因為一直沒有找到主題，所以拖到了開學後才動工。開學後，生活開始變得很繁忙。成發我意外的同時兼任公關和影片組，加上自己的專題進度有點落後，每天都有許多任務要完成。</p><p>而今年的<a href="http://blog.tommydong.life/2019/03/09/TOI-2019-PRE/">入營考</a>，對我來說也很重要，入營考某種程度上等同清大資工的特殊選才。雖然搞的壓力很大，狀況沒有很好，還是勉強進了我的第一次選訓營。因為要參加<a href="http://blog.tommydong.life/2019/03/31/TOI2019-%E9%81%B8%E8%A8%93%E7%87%9F%E5%BF%83%E5%BE%97/">選訓營</a>，所以成發的是也就暫時擱置。選訓營雖然一階就被刷下去，不過也是累積了一些經驗，發覺一些進步空間。</p><p>選訓結束後，馬上跳上成發的崗位。因為可以全心的投入，工作上也比較從容。有好好負責我的工作，專題也順利的完成。成發順利落幕，進入了六月，我又回到程式競賽的生活。</p><h2 id="夏"><a href="#夏" class="headerlink" title="夏"></a>夏</h2><p>剛回到競賽，Codeforces 就送我了負兩百多分，<a href="http://blog.tommydong.life/2019/06/12/%E6%8E%89%E5%88%86%E6%9C%89%E6%84%9F/">掉分有感</a>有稍微寫到。不過當時也是因為爺爺病情逐漸加劇，所以才寫了那篇文章。掉分之後，印象中有稍微調整，加上運氣好，就上到了橘人。</p><p>進到了暑假。</p><p>今年暑假，我準備了科學班資格考、參加暑期輔導、參加棒球隊訓練、參加 <a href="http://blog.tommydong.life/2019/08/06/IONCamp-2019/">IONCamp</a>、參加智慧鐵人。資格考雖然讀的沒有很熟，但最後還是壓線過了。<a href="http://blog.tommydong.life/2019/08/06/%E6%99%BA%E6%85%A7%E9%90%B5%E4%BA%BA-2019-%E6%B1%BA%E8%B3%BD/">智慧鐵人</a>不小心過關斬將，參加了全國賽。參加智慧鐵人也讓我經歷了許多，值得我跑屏東兩次，不過明年大概不會再參加了(雖然獎金真的很吸引人)。</p><p>八月大概是滿滿的自主練習，加上一些出去玩。那時候訓練方法大概就是時間全部拿來砸題目，一天可以寫上許多題，持續了兩個月，也順便把一些我沒學過得演算法補上。可能因為刷了很多題，實做技巧變得還不錯。反而思考能力進步沒有很多。</p><h2 id="秋"><a href="#秋" class="headerlink" title="秋"></a>秋</h2><p>秋天大概是各種支線比賽。爺爺病危。心情很複雜，每次比賽都希望能拿好成績讓爺爺開心一點能夠好起來。也因為我打比賽已經第三年了，成績真的進步不少，不過爺爺雖卻沒有好起來，在運動會那天過世。</p><h2 id="冬"><a href="#冬" class="headerlink" title="冬"></a>冬</h2><h1 id="2020"><a href="#2020" class="headerlink" title="2020"></a>2020</h1><p>今年是緊湊的一年，在急促的步調中，緩慢的改變自己。改變自己的想法，修正自己的作法，調整自己準備迎接 2020, 18歲, OI的最後一年。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;序&quot;&gt;&lt;a href=&quot;#序&quot; class=&quot;headerlink&quot; title=&quot;序&quot;&gt;&lt;/a&gt;序&lt;/h1&gt;&lt;p&gt;改變&lt;/p&gt;
&lt;h1 id=&quot;改變的一年&quot;&gt;&lt;a href=&quot;#改變的一年&quot; class=&quot;headerlink&quot; title=&quot;改變的一年&quot;&gt;&lt;/
      
    
    </summary>
    
    
      <category term="生活" scheme="https://blog.tommydong.life/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>全國賽 sop</title>
    <link href="https://blog.tommydong.life/2019/12/13/%E5%85%A8%E5%9C%8B%E8%B3%BD-sop/"/>
    <id>https://blog.tommydong.life/2019/12/13/全國賽-sop/</id>
    <published>2019-12-13T13:56:22.000Z</published>
    <updated>2020-04-16T01:13:39.858Z</updated>
    
    <content type="html"><![CDATA[<h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p>明天就是全國賽了，看到隊友 balbit 寫了 SOP，我也跟一波。<br>(跟他的應該不會差很多)</p><h2 id="測機"><a href="#測機" class="headerlink" title="測機"></a>測機</h2><ul><li>library: pb_ds,__int128,rope (順便熟悉一下用法)</li><li>pragma: O3, Ofast, unroll-loops</li><li>speedtest: 1e8 of rand(), client/server speed</li><li>subtask union</li><li>standard output</li></ul><h2 id="正賽"><a href="#正賽" class="headerlink" title="正賽"></a>正賽</h2><h3 id="目標"><a href="#目標" class="headerlink" title="目標"></a>目標</h3><p>整體盡量穩定，前 2.5hr 積極解題，後 2.5hr 保守拿分。</p><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><blockquote><p>12:00 吃午餐</p></blockquote><ol><li>輸出模板</li><li>讀<strong>所有</strong>題目，標示類型</li><li>解比較簡單的題目</li><li>解分數差距大的題目</li><li>按照 (分數/難度) 解決 subtask</li></ol><h3 id="狀況處理"><a href="#狀況處理" class="headerlink" title="狀況處理"></a>狀況處理</h3><ul><li>想題目時限: 30 min</li><li>看完題目覺得都很難<ul><li>常見狀況，挑前面的題目想稍微久一點</li></ul></li><li>80% 分數<ul><li>花 &lt; 10 min 想解法，沒辦法就先留著</li></ul></li><li>覺得解題不順利<ul><li>專注剩下來的時間，享受比賽</li></ul></li><li>Judge queue 很長<ul><li>少見，減少對 judge 依賴，增加本機測試</li></ul></li></ul><h3 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h3><p>開心打比賽，動態調整狀況，祝大家順利 :)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;序&quot;&gt;&lt;a href=&quot;#序&quot; class=&quot;headerlink&quot; title=&quot;序&quot;&gt;&lt;/a&gt;序&lt;/h2&gt;&lt;p&gt;明天就是全國賽了，看到隊友 balbit 寫了 SOP，我也跟一波。&lt;br&gt;(跟他的應該不會差很多)&lt;/p&gt;
&lt;h2 id=&quot;測機&quot;&gt;&lt;a href
      
    
    </summary>
    
    
      <category term="程式競賽" scheme="https://blog.tommydong.life/tags/%E7%A8%8B%E5%BC%8F%E7%AB%B6%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>109 清大資工特殊選才</title>
    <link href="https://blog.tommydong.life/2019/11/30/109-%E6%B8%85%E5%A4%A7%E8%B3%87%E5%B7%A5%E7%89%B9%E6%AE%8A%E9%81%B8%E6%89%8D/"/>
    <id>https://blog.tommydong.life/2019/11/30/109-清大資工特殊選才/</id>
    <published>2019-11-30T02:44:03.000Z</published>
    <updated>2020-04-16T01:13:39.855Z</updated>
    
    <content type="html"><![CDATA[<h2 id="資料審查"><a href="#資料審查" class="headerlink" title="資料審查"></a>資料審查</h2><p>備審資料我總共做了大五頁，拿到了滿分，據我的了解進過選訊營 1! 都有滿分。</p><h2 id="面試紀錄"><a href="#面試紀錄" class="headerlink" title="面試紀錄"></a>面試紀錄</h2><p>面試跟以往一樣分兩個階段，第一個階段是口頭報告，第二個階段是演算法口試。</p><h3 id="口頭報告"><a href="#口頭報告" class="headerlink" title="口頭報告"></a>口頭報告</h3><p>我因為是新竹人，所以排在第一個面試。其實時間有點抓太緊，一到現場沒過多久就開始面試了。一開始有一點緊張，不過看評審好像都邊聽邊點頭，就變得比較輕鬆、開心的講。</p><p>問題:</p><h4 id="高三有參加黑豹旗嗎"><a href="#高三有參加黑豹旗嗎" class="headerlink" title="高三有參加黑豹旗嗎"></a>高三有參加黑豹旗嗎</h4><p>有，成績沒有高二那麼好XD</p><h4 id="你好像有社團也有競賽，大學如何分配"><a href="#你好像有社團也有競賽，大學如何分配" class="headerlink" title="你好像有社團也有競賽，大學如何分配"></a>你好像有社團也有競賽，大學如何分配</h4><p>競賽我認為高中有很多收穫了，大學競賽想要當興趣，時間可以有其他安排。</p><h4 id="競賽有除了成績以外有趣的故事嗎"><a href="#競賽有除了成績以外有趣的故事嗎" class="headerlink" title="競賽有除了成績以外有趣的故事嗎"></a>競賽有除了成績以外有趣的故事嗎</h4><p>… 大概是參加很多有趣的團體賽吧</p><h4 id="團體賽隊友都找誰"><a href="#團體賽隊友都找誰" class="headerlink" title="團體賽隊友都找誰"></a>團體賽隊友都找誰</h4><p>固定隊友是同屆的朋友，第三個人有時候找學長有時候找學弟。</p><h3 id="你說你當時的五子棋程式是使用IDDFS方法，現在有沒有加入人工智慧的方法"><a href="#你說你當時的五子棋程式是使用IDDFS方法，現在有沒有加入人工智慧的方法" class="headerlink" title="你說你當時的五子棋程式是使用IDDFS方法，現在有沒有加入人工智慧的方法"></a>你說你當時的五子棋程式是使用IDDFS方法，現在有沒有加入人工智慧的方法</h3><p>有，在一開始大盤面使用神經網路決定，再用 IDDFS 搜尋確定解。</p><h3 id="演算法轟炸時間"><a href="#演算法轟炸時間" class="headerlink" title="演算法轟炸時間"></a>演算法轟炸時間</h3><p>演算法有分兩個難度的題目，{A,C}，我抽到的應該是比較簡單的 A。題目是問小括號字串判斷合法。</p><h4 id="所以你會嗎"><a href="#所以你會嗎" class="headerlink" title="所以你會嗎"></a>所以你會嗎</h4><p>我稍微想了一下，預測了一下他之後的問題。最後決定回答用 stack 解決。</p><h4 id="如果括號有很多種"><a href="#如果括號有很多種" class="headerlink" title="如果括號有很多種"></a>如果括號有很多種</h4><p>啊哈，被我猜中了&gt;&lt;。我就跟教授說其實我的方法可以延伸，直接解決，如果只是小括號其實開一個變數就好。</p><h4 id="stack-如何實做"><a href="#stack-如何實做" class="headerlink" title="stack 如何實做"></a>stack 如何實做</h4><p>有兩種: C++ STL stack, Array with pointer</p><h4 id="Array-想隨著需求增加怎麼辦"><a href="#Array-想隨著需求增加怎麼辦" class="headerlink" title="Array 想隨著需求增加怎麼辦"></a>Array 想隨著需求增加怎麼辦</h4><p>用完的時候，allocate 兩倍複製過去。</p><h4 id="記憶體怎麼釋放"><a href="#記憶體怎麼釋放" class="headerlink" title="記憶體怎麼釋放"></a>記憶體怎麼釋放</h4><p>演算法跑完之後把他 delete</p><h4 id="如果過程中不想要多出那麼多沒用到的記憶體怎麼辦"><a href="#如果過程中不想要多出那麼多沒用到的記憶體怎麼辦" class="headerlink" title="如果過程中不想要多出那麼多沒用到的記憶體怎麼辦"></a>如果過程中不想要多出那麼多沒用到的記憶體怎麼辦</h4><p>那不要複製兩倍，把常數改小一點。</p><h4 id="有沒有其他方法"><a href="#有沒有其他方法" class="headerlink" title="有沒有其他方法"></a>有沒有其他方法</h4><p>OS: 慘! 我不知道他想要我講什麼</p><p>我: 讓我想看看…………..</p><p>經過了一陣子，教授也自己聊起來XD</p><p>我: 開一個常數倍的 buffer</p><p>教授覺得滿意(?) 結束這回合</p><h4 id="長度-n-括號匹配有幾種"><a href="#長度-n-括號匹配有幾種" class="headerlink" title="長度 n 括號匹配有幾種"></a>長度 n 括號匹配有幾種</h4><p>OS: 不敢回答卡特蘭數，因為我沒學過</p><p>我: dp!!</p><p>時間到!!!</p><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>之後再說</p><p><strong>UPD1</strong>: 12/13 口頭報告多想起一題<br><strong>UPD2</strong>: 12/13 正取</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;資料審查&quot;&gt;&lt;a href=&quot;#資料審查&quot; class=&quot;headerlink&quot; title=&quot;資料審查&quot;&gt;&lt;/a&gt;資料審查&lt;/h2&gt;&lt;p&gt;備審資料我總共做了大五頁，拿到了滿分，據我的了解進過選訊營 1! 都有滿分。&lt;/p&gt;
&lt;h2 id=&quot;面試紀錄&quot;&gt;&lt;a hr
      
    
    </summary>
    
    
      <category term="高中" scheme="https://blog.tommydong.life/tags/%E9%AB%98%E4%B8%AD/"/>
    
      <category term="大學" scheme="https://blog.tommydong.life/tags/%E5%A4%A7%E5%AD%B8/"/>
    
  </entry>
  
  <entry>
    <title>TIOJ 1921 吐鈔機2 CDQ 分治</title>
    <link href="https://blog.tommydong.life/2019/11/28/TIOJ-1921-%E5%90%90%E9%88%94%E6%A9%9F2-CDQ%E5%88%86%E6%B2%BB/"/>
    <id>https://blog.tommydong.life/2019/11/28/TIOJ-1921-吐鈔機2-CDQ分治/</id>
    <published>2019-11-28T15:23:02.000Z</published>
    <updated>2020-04-16T01:13:39.858Z</updated>
    
    <content type="html"><![CDATA[<h2 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h2><p>原題就在 TIOJ 偷懶只打 dp 轉移式</p><p>$dp[i]$ 代表第 i 台機器購買日之前最多持有金額<br>$$dp[i] = \max_{dp[j]\geq P[j]}(dp[j]-P[j]+R[j]+G[j]\cdot(D[i]-D[j]))$$</p><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>可以看出這是一題 dp 斜率優化，G[j] 是斜率，查詢點單調。</p><p>對於斜率不單調的問題，我平常的作法是動態凸包，不過這題 Memory Limit 有點緊，所以我就突然想到了一個 CDQ 分治的作法。</p><p>概念就是凸包可以拆成子集合再取極值，細節有點不好說明，我就用 pseudocode 表示好了:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">void main () &#123;</span><br><span class="line">    sortMachinesByTime();</span><br><span class="line">    solve(0, n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void solve (l, r) &#123; </span><br><span class="line">    m = (l + r) / 2;</span><br><span class="line">    solve(l, m);</span><br><span class="line"></span><br><span class="line">    buildConvexHull(l, m);</span><br><span class="line">    updateDp(m, r);</span><br><span class="line"></span><br><span class="line">    solve(m, r);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至於 <code>buildConvexHull</code> 因為是一次建一個區間，所以可以先把斜率排序，用單調隊列維護，<code>updateDp</code>本來就遞增所以也可以均攤O(1) 更新 dp。</p><h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><p>利用離線，可以把直線照斜率排序好在維護凸包，雖然有犧牲一些時間複雜度，不過實做上比起動態凸包簡單的多。時間複雜度是 $O(Nlog^2N)$ 一個 log 是 CDQ，另一個是做凸包的排序，不過我也不太會估，可能有高估也說不定。空間就是好好的$O(N)$。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;問題&quot;&gt;&lt;a href=&quot;#問題&quot; class=&quot;headerlink&quot; title=&quot;問題&quot;&gt;&lt;/a&gt;問題&lt;/h2&gt;&lt;p&gt;原題就在 TIOJ 偷懶只打 dp 轉移式&lt;/p&gt;
&lt;p&gt;$dp[i]$ 代表第 i 台機器購買日之前最多持有金額&lt;br&gt;$$dp[i] =
      
    
    </summary>
    
    
      <category term="程式競賽" scheme="https://blog.tommydong.life/tags/%E7%A8%8B%E5%BC%8F%E7%AB%B6%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>HP 2019</title>
    <link href="https://blog.tommydong.life/2019/11/06/HP-2019/"/>
    <id>https://blog.tommydong.life/2019/11/06/HP-2019/</id>
    <published>2019-11-06T13:06:46.000Z</published>
    <updated>2020-04-16T01:13:39.858Z</updated>
    
    <content type="html"><![CDATA[<h2 id="紀錄"><a href="#紀錄" class="headerlink" title="紀錄"></a>紀錄</h2><p>這次比賽策略是一開始我單開水題，由隊友餵題目。進度還算順利，除了 pE 複雜度估錯所以 TLE 停滯以外都有 AC，也沒有 debug 超時的題目。不過最後一小時效率有下降，首先是 string 由 balbit 寫 hasing 方法，遇到了型態轉換的 bug。後來他接著解 pD 的時候，好像是題目敘述不清楚和 Floyd 寫錯，花了比較多的時間。</p><p>但事實上，我們最後一小時解出來的題目幾乎沒有。pF 礙於語法和輸入，沒有辦法在最後十幾分鐘搞定，pO 聽說可作，但是因為分數不多就沒有開了。</p><h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><table><thead><tr><th>prob</th><th>type</th><th>writer</th><th>solver</th></tr></thead><tbody><tr><td>pA</td><td>graph</td><td>TMD</td><td>TMD</td></tr><tr><td>pB</td><td>dp</td><td>TMD</td><td>BAL</td></tr><tr><td>pC</td><td>math</td><td>TMD</td><td>C66</td></tr><tr><td>pD</td><td>graph</td><td>BAL</td><td>?</td></tr><tr><td>pE</td><td>string</td><td>BAL</td><td>C66</td></tr><tr><td>pF</td><td>math</td><td>X</td><td>X</td></tr><tr><td>pG</td><td>implemnt</td><td>TMD</td><td>C66</td></tr><tr><td>pH</td><td>implement</td><td>TMD</td><td>BAL</td></tr><tr><td>pI</td><td>implement</td><td>X</td><td>X</td></tr><tr><td>pJ</td><td>geometry</td><td>TMD</td><td>TMD</td></tr><tr><td>pK</td><td>flow</td><td>X</td><td>X</td></tr><tr><td>pL</td><td>graph</td><td>TMD</td><td>C66</td></tr><tr><td>pM</td><td>?</td><td>X</td><td>X</td></tr><tr><td>pN</td><td>?</td><td>X</td><td>X</td></tr><tr><td>pO</td><td>graph</td><td>X</td><td>X</td></tr></tbody></table><h2 id="Not-Accepted"><a href="#Not-Accepted" class="headerlink" title="Not Accepted"></a>Not Accepted</h2><ul><li>pF $a/(b+c)+b/(a+c)+c/(a+b)=6$ minimize $a+b+c$<ul><li>看起來很數學</li></ul></li><li>pI string matching<ul><li>處理跳脫有點頭痛，有精神解</li></ul></li><li>pK minumum path cover on dag<ul><li>看過題目，但之前就不會了</li></ul></li><li>pM waiting for solution<ul><li>範圍很小，但不夠暴力</li></ul></li><li>pN encoding<ul><li>我沒讀題目，分數很少</li></ul></li><li>pO graph searching<ul><li>我沒讀題目，分數很少</li></ul></li></ul><h2 id="學習"><a href="#學習" class="headerlink" title="學習"></a>學習</h2><p>這次比賽學到的知識:</p><h3 id="raw-string"><a href="#raw-string" class="headerlink" title="raw string"></a>raw string</h3><p>跳脫免煩惱-&gt;pI</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> str1 = <span class="string">R"(\"'"</span>^&amp;*()))<span class="string">";</span></span><br></pre></td></tr></table></figure><h3 id="DAG-最小不重複路徑覆蓋"><a href="#DAG-最小不重複路徑覆蓋" class="headerlink" title="DAG 最小不重複路徑覆蓋"></a>DAG 最小不重複路徑覆蓋</h3><p>算是經典題，知識以前看了題目沒有解出來。</p><p>可以理解成每個點原先都是一條獨立路徑，我們要盡可能合併路徑。每個節點只能與自己連到的一個點合併，每個節點都只能被一個連到自己的點合併。所以就是二分圖批配，每個點的拆成進出兩個點集合，做最大匹配。</p><h3 id="split-string-by-comma"><a href="#split-string-by-comma" class="headerlink" title="split string by comma"></a>split string by comma</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> str = <span class="string">"asdf,a,asdf"</span>, sub;</span><br><span class="line"><span class="function"><span class="built_in">stringstream</span> <span class="title">ss</span><span class="params">(str)</span></span>;</span><br><span class="line"><span class="keyword">while</span> (getline(ss, sub, <span class="string">','</span>)) &#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; sub &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="比賽建議"><a href="#比賽建議" class="headerlink" title="比賽建議"></a>比賽建議</h2><p>整體來說，今年的題目精準度比去年好很多。大部分的測資範圍都有標示，也沒有出現題目有誤的狀況。難度有提昇，也讓我在比賽後學習新的程式技巧。對於競賽系統，我提供一個建議:</p><p>評測結果可以更精確一些，評測系統應該要在答案錯誤的情況下給出更精確的結果。提供我們的答案是 答案錯誤、超過時限、超過記憶體或Runtime Error2的資訊。並且提供比賽每筆測資能使用的時間與空間，讓參賽者可以更正確的分析方法。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;紀錄&quot;&gt;&lt;a href=&quot;#紀錄&quot; class=&quot;headerlink&quot; title=&quot;紀錄&quot;&gt;&lt;/a&gt;紀錄&lt;/h2&gt;&lt;p&gt;這次比賽策略是一開始我單開水題，由隊友餵題目。進度還算順利，除了 pE 複雜度估錯所以 TLE 停滯以外都有 AC，也沒有 debug 超時
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>108北二區資訊學科能力競賽</title>
    <link href="https://blog.tommydong.life/2019/11/06/HCHSPC-2019/"/>
    <id>https://blog.tommydong.life/2019/11/06/HCHSPC-2019/</id>
    <published>2019-11-06T13:03:59.000Z</published>
    <updated>2020-04-16T01:13:39.858Z</updated>
    
    <content type="html"><![CDATA[<h2 id="題目和解"><a href="#題目和解" class="headerlink" title="題目和解"></a>題目和解</h2><p>大家期待的東西擺前面好了，解的部份不一定是對的大家看看就好，也可以跟我討論XD</p><h3 id="上午"><a href="#上午" class="headerlink" title="上午"></a>上午</h3><ul><li>pA 給你一個陣列 A[i] 構造 B[i] $\forall i$滿足 B[i] &gt; A[i]，並且B[i] 每個不連續位置不能 &lt; C 求最小B 總和<ul><li>$n &lt; 10^4 (10^6), c&lt;=n$ 值域忘了</li><li>$O(N^2)$ 就是一維 dp 把他想成是  B[i] 切成很多段，每段長度 &gt;= C 且值是 $max(A[l..r])$</li><li>O(NlgN) 感覺可以D&amp;C優化不確定</li></ul></li><li>pB N 位數 1A2B 猜數字，給定已知條件，剩餘可能總數<ul><li>條件 $\leq 10^6$ 個位數 $&lt;11$ </li><li>作法是考慮到可能解，隨著條件會遞減很快。所以就把條件 unique，再暴力實做 (有正解或會估複雜度可以教我)</li></ul></li><li>pC N 個點問有幾個點對曼哈頓距離 &lt; D<ul><li>$N \leq 10^5$ 值域 5e6(我提問問到的)</li><li>保證測資隨機，每個點答案不 &gt; 10 </li><li>我作法是對直域每 D*D 切一塊，每個人詢問鄰近九塊，沒有證明但我覺的隨機狀況複雜度應該不差。</li></ul></li><li>pD 給 M 個點，選取 N 個使的w*h 格子點中，距離任意一個被選取的位置曼哈頓距離 &lt; R 的數量最大。<ul><li>$h, w \leq 10^4, N\leq10, M\leq 20$</li><li>首先只考慮恰選10 點</li><li>枚舉所有選法，做曼哈頓版本矩形覆蓋面積</li><li>複雜度 $O(C(20,10)*10logC)$</li></ul></li><li>pE 給一張圖，每個邊定義W 最短距離必須經過此邊的點對數量，求最大的W。<ul><li>$N \leq 10^3, M \leq 2*10^5$</li><li>橋的答案才會 &gt; 0，枚舉所有橋</li><li>對於橋的兩邊 dfs 求大小，相乘即為 W</li></ul></li><li>pB-&gt;pC-&gt;pE-&gt;pA-&gt;pD</li></ul><h2 id="下午"><a href="#下午" class="headerlink" title="下午"></a>下午</h2><ul><li>pA 求經過最多點的直線<ul><li>$N \leq 10^3$</li><li>題目其他細節有點煩</li><li>對於每個點，枚舉所有經過他的直線，按照斜率排序找相同斜率的數量。</li></ul></li><li>pB 有 N 個物品價值為 V[i], 拿走價值 W，就不能拿 W-1, W+1，求能拿走得最大價值和<ul><li>$V[i] \leq 500$, $N \leq 10000$</li><li>dp bj4</li></ul></li><li>pC 一個N多項式f給你 N+1 個點值組，求f(t) mod prime<ul><li>$N \leq 1000$ 值 32bits</li><li>牛頓插值可以$N^3$，Lagrange Interpolation 可以 $N^2$</li></ul></li><li>pB-&gt;pA-&gt;pC</li></ul><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今年是最後一年的學科能力競賽，北二區可以派出 9 個，相對起來其實要晉級的壓力不是說很大。賽前我們實驗共同請了兩次假，沒有特別為北二區做準備。比賽前一天，睡前索性看一下比賽規則，原來可以帶參考資料。於是我趕快提醒群組和隔壁校朋友，也被迫準備了一下工具和資料晚了一些睡覺。今年比賽比較特別，取消了原有的筆試，變成上午下午各一場 (3+2)hr 上機考試。</p><h2 id="比賽狀況"><a href="#比賽狀況" class="headerlink" title="比賽狀況"></a>比賽狀況</h2><p>一進考場，教授說可以使用 USB 裡的程式碼，因為剛好有準備所以就用上了。 USB 內容如下:</p><ul><li>VSCode (雖然沒打算用)</li><li>Cpp-reference offline</li><li>Codes<ul><li>BiTCoin template</li><li><a href="https://github.com/spaghetti-source/algorithm" target="_blank" rel="noopener">spaghetti-source/algorithm</a></li><li><a href="https://github.com/dl8sd11/online-judge" target="_blank" rel="noopener">code_archive</a><br>只本是帶了 IONC 講義和 LYB template(之前跟BB同隊時印的)</li></ul></li></ul><p>早上的比賽，開題目的時候感覺一股涼意。pA 難度頗高，為了確認是不是每題都這樣，我決定先看完題目再開始想。結果意外的題目比去年平均難上不少，去年分配是四題水題、一題沒人會解，今年大概是 2 題中等，3 題需要思考。這次比賽有部份給分，但是沒有公佈子測資範圍，所以我開賽先對我覺的比較有挑戰的兩題 assert 測資。意外的是，其中一題 N 給 $10^6$ 結果 $10^4$ 包含 100%，另一題 $10^8$ 的 $10^3$ 也是 100% (後者最後半小時有公佈&lt;20)。結果我覺的有挑戰的其中一題，就順利的變成可解的題目。長度三個小時的比賽進行的還算順利，最後拿到 4+ 0.5。</p><p>下午的比賽，一開始很睏。題目一共三題，兩題覺得可以拿下，一題需要努力。原本分配是 10 pB, 20 pA, 70 pC，但狀況不太好，我原本排 20min 的 pA 花了我一個半小時。新竹中學今天在舉辦活動，播放吵鬧不優美的音樂，也多少有影響。最後剩下 15 分鐘，馬上想出最後一題的部份解。最後 6 分鐘，終於要上傳了，冷卻時間 180s。計畫是測試一次，修改一下，在最後的三分鐘上傳最後一次。沒想到送上去 CE，原本要送 pC.cpp 送成 pC.c (之前留的毒)。吃了 CE 只好摸摸鼻子，努力檢查，傳上去 15/20，加上兩題滿分收工。<br>(原本以為pA寫那麼久要8888，結果好像只有我過XD)</p><p>Rank1</p><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>先不要(x</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;題目和解&quot;&gt;&lt;a href=&quot;#題目和解&quot; class=&quot;headerlink&quot; title=&quot;題目和解&quot;&gt;&lt;/a&gt;題目和解&lt;/h2&gt;&lt;p&gt;大家期待的東西擺前面好了，解的部份不一定是對的大家看看就好，也可以跟我討論XD&lt;/p&gt;
&lt;h3 id=&quot;上午&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
      <category term="程式競賽" scheme="https://blog.tommydong.life/tags/%E7%A8%8B%E5%BC%8F%E7%AB%B6%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>智慧鐵人-2019-決賽 Ducky</title>
    <link href="https://blog.tommydong.life/2019/09/03/%E6%99%BA%E6%85%A7%E9%90%B5%E4%BA%BA-2019-%E6%B1%BA%E8%B3%BD-Ducky/"/>
    <id>https://blog.tommydong.life/2019/09/03/智慧鐵人-2019-決賽-Ducky/</id>
    <published>2019-09-03T13:29:24.000Z</published>
    <updated>2020-04-16T01:13:39.858Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我的心得視角比較窄，所以請了隊友幫我一起寫心得www 以下正文感謝 Ducky</p></blockquote><p>流水帳，就是流水帳。</p><p>我沒有想到我們會進決賽。</p><p>沒錯，進決賽的行李箱中裡面並非滿滿的零食泡麵，而是一本本高中學測複習的參考書。</p><p>一千多支隊伍最後選出的二十餘隊伍，講真，能進智慧鐵人決賽的高中生們不一定是全國最頂尖的，但絕對是最幸運的──知道這個比賽，同時過五關斬六將的進入決賽。</p><p>從新竹南下遙遠的屏東行，六天五夜。</p><p>雖說有榮幸參賽很幸運，但面對兩千多塊的車費其實還是有怨念，行程安排中的屏科大巡禮、打散各隊伍與國際生交流互動等更是令人提不起勁，都計劃要裝病留在宿舍讀書了。</p><p>身為一個對時間的掌管控制全國PR只有6的人，熬夜趕作業讀段考早已是常態。很了解自己的身體狀況──睡四小時隔天依然可以生龍活虎，睡小於四小時就要向未來借時間用雙倍甚至三四倍的時間睡回來，像72小時這種連續挑戰倒是不曾經歷過，刺激。(複賽經歷24小時其實就像假日隔天有份報告要交一樣，輕輕鬆鬆→是不是被抓到我都在躺分)</p><p>很幸運地，國際生交流被安排在中文全通的馬來西亞小組，另外協同的未來清交大高材生亦很友善，同隊伍J&amp;S又社交輕鬆上手無障礙的帶我飛；同時，屏科大巡禮被設計成尋寶遊戲激起了我玩遊戲的勝負欲(而且我真的從小就喜歡玩超大型捉迷藏鬼抓人尋寶這種遊戲)，前兩天過得很成功。為了不讓自己在72小時中瘋狂開睡，我每天固定讀書讀到2、3點(7起床)，把作息固定至少4hr/day，希望沒有干擾到室友睡覺。</p><p>72小時過得很快，比起複賽的24小時，自己好像貢獻的沒那麼多，唯一就是(自認為)把隊伍的一切看的很透徹。<br>自己是很直接真實的人，其實很多時候不爽就會直接表現出來，但畢竟是從國小就認識的一群朋友，好像總是5分鐘後又像沒事一樣(希望不只有我這麼認為啦)。</p><p>不知道是不是經過複賽──我們完成任務後還有約五小時的休息時間，大家這次剛開始非常悠閒，還有人信誓旦旦跟我說能夠只花24小時便完成所有道具(?)畢竟我也是從國小就開始玩機器人之類電子機械的老人了，這次競賽成品一知道要扯上arduino讓它動起來就知道不簡單，開始緊張餘進度的人好似只有我一個，甚至大家都陸續把睡袋攤開躺進去QAQ，當下我可是超緊張又崩潰……</p><p>幸好大家還是在第一天下午討論出了主軸，便可開始動工。「以生物為師」之於我，早就猜到要做甚麼，但我很早就表達聲明──我討厭這個題目，我真的一點都想不到，就算是學測作文出出來我也會空白交卷的那種無感題目。還好隊友們實凱瑞，不僅想出了一個能夠以arduino呈現的想法，想法還非常非常非常有創意，總之，我覺得教授們絕對會肯定我們的成品。</p><p>前48小時，我們的分工非常明確，說難聽點，就是責任制──做完你就可以睡，沒做完你就要負責把它完成。我沒辦法想像Dong一個人要負責所有關於arduino的機構，但說白了前幾個小時的確都只有他在弄；J和S負責與電子無關的其他道具布景。I負責任何文本中所需之文學性內容及最後翻譯為英文(因為可能參加國際賽)，我負責文本、報告的其他部分。N大概是在打雜，其實我沒有特別的印象QQ(真的不是故意的!!</p><p>很突然地插播一下，其實我們闖關普遍分數都算高(甚至有兩三關都在前2名)，可惜魔法卡那關剛好Bang，和沒闖特別多的關卡。各關卡真的都有夠有趣，很可惜沒有闖完全部的關卡這件事我約略說了不少於十遍，期望高三有機會提升自己到能同時闖關同時做主軸。</p><p>最後24小時，大家終於意識到問題──分工不均。我像老媽子般很欣慰地在這時終於聽見Dong突然向大家說：「我覺得我需要大家的幫忙。」前48小時我不知道催促了多少次他，他都完全無感@@，而在他請求大家的支援後，大家也都陸續完成自己的工作，開始瘋狂地幫助Dong(這裡使用“瘋狂”一詞是因為我原本真的預計大家會做不完，沒想到效率超乎我想像)。</p><p>只能說，回頭看這最後24小時，大家都如同打了雞血般，然最後關鍵的問題發生在我身上。<br>自以為可以，但就不小心睡著了。<br>我背稿的時間直接從兩個半小時變成20分鐘。<br>如同模擬考是因為考試期間睡著、智鐵出去六天才考爆炸一樣，<br>紅牛綠茶都喝完了──藉口。<br>需要一直盯著電腦螢幕做事結果把電腦活交給別人──藉口。<br>忘記帶server害我很緊張(Dong處變不驚非常完美的應對了問題)──藉口。<br>反正我睡著了，根本來不及準備→<br>沒背好稿→<br>人生中可能是數一數二失敗的報告(智鐵官方求你不要公布影片了!!!)</p><p>我對我們的題目非常有信心，<br>就算看了第一組那薛走40w的精湛演出後，<br>我依然認為我們的蜘蛛系統有創意及實際操作的結果能給我們大大加分。<br>結果<br>，<br>我的報告毀掉了。</p><p>還沒公佈我們其實第三名前，<br>其實我偷偷跑出建築物找地方大概爆哭了10分鐘，<br>(回來去洗臉時還剛好遇到我們小天使@@有夠尷尬，還好小天使可能也知道我不太喜歡講話就沒跟我說話ww)<br>總之，還好有第三名，不然我真的不知道怎麼提頭見我的隊友和給我兩千塊坐高鐵的爸媽(錯誤)。</p><p>雖然還是有懷疑過其實我們可以第二，<br>但最後人家國內第二名拿國際第三名有自我催眠其實我們不管怎樣就是國內第三(?<br>→→主要國內第二的表演一直都在我們前一組，還沒機會看到((雖然我真的跪求智鐵官方不要把我失敗的報告放出來啦orz</p><p>總之，謝謝我凱瑞及充滿包容心的隊友們</p><p>謝謝將來可能願意簽我一模成績單的爸媽</p><p>明年希望有機會再戰進決賽(換北部了對吧!!!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;我的心得視角比較窄，所以請了隊友幫我一起寫心得www 以下正文感謝 Ducky&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;流水帳，就是流水帳。&lt;/p&gt;
&lt;p&gt;我沒有想到我們會進決賽。&lt;/p&gt;
&lt;p&gt;沒錯，進決賽的行李箱中裡面並非滿滿的零食泡麵，而是
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>智慧鐵人-2019-決賽</title>
    <link href="https://blog.tommydong.life/2019/08/06/%E6%99%BA%E6%85%A7%E9%90%B5%E4%BA%BA-2019-%E6%B1%BA%E8%B3%BD/"/>
    <id>https://blog.tommydong.life/2019/08/06/智慧鐵人-2019-決賽/</id>
    <published>2019-08-06T13:27:27.000Z</published>
    <updated>2020-04-16T01:13:39.858Z</updated>
    
    <content type="html"><![CDATA[<h2 id="門票"><a href="#門票" class="headerlink" title="門票"></a>門票</h2><p>對，我們進決賽了。雖然闖關分數普通，但是主軸任務第二名 (是說第一名有5000$)，所以順利晉級決賽。<br>關於背景規則什麼的，請見 「智慧鐵人-2019-複賽」</p><h2 id="diff-決賽規則-複賽規則"><a href="#diff-決賽規則-複賽規則" class="headerlink" title="diff 決賽規則 複賽規則"></a>diff 決賽規則 複賽規則</h2><p>決賽規則和複賽規則差異簡單來說就是只有主軸任務列入評分，但闖關依然存在，闖關的目的除了拿特殊獎項($$)之外，就是賺取能購買主軸任務材料用的虛擬貨幣。評分有分成國內賽和國際賽，國內賽是台灣隊伍互相競爭，前三名晉級國際賽和國際邀請隊伍競爭。</p><h2 id="歷程"><a href="#歷程" class="headerlink" title="歷程"></a>歷程</h2><p>用歷程這個詞不知道恰不恰當，不過 72hr 真的經歷了好多過程。一開始拿到題目的時候，大致上的方向和我想的沒有差太多，不過剛從 IONCamp 回來的我，沒有花功夫預先處理構想，真的是用比賽中的時間去構想。題目是以「仿生科技，解決永續發展問題」，經過了大概三小時的構想，我們有了一個明確的方向: 林木保育系統。我們訂的方向是用多種仿生策略，解決一個林木保育問題，這種訂題方向我當時判斷是蠻適合的，也就準備開始動工了。</p><p>動工沒多久，我們就開始了闖關循環播放。 72hr 初期，我們的闖關策略算是稍微積極，結束闖關就會預約下一個關卡。不過剛好卡到一關當機，所以間隔了一餐的時間都沒有闖到關卡。因為可以借貸又加上我們有初始金額，所以對我們影響不算太大，可能某種程度上也削弱了後續打關卡的興趣。整體來說，我們的背景開始動工了，好像問題不大。而我是負責機械系統整合，但一切災難才剛開始。</p><blockquote><p>接下來這篇文章視角會比較靠近我，其他的細節可能來不及好好敘述了0w0</p></blockquote><p>首先介紹一下比賽的小規則，決賽比賽這幾年會要求自動化，劉老師對於自動化的敘述是不用手直接控制。因此大會會提供 Arduino * 2，一片是 Client 可以接馬達(伺服、步進)、LED，另一片是 Server 可以用 Bluetooth 控制 Client。 不過考慮到很多參賽者沒有程式設計能力，大會提供的 Server and Client 都有預先設計好的罐頭程式。內容是用 Serial 界面控制 Server，可以輸入每個腳位的參數 (比如說馬達轉幾度、LED 亮那幾顆之類的)，Client 則是有設計好的電路圖可以接。不過我自己使用上是有些問題的，那個程式界面操作上複雜 (因為指令太一般化，需要輸入很多參數)，而且操作只有單數次會有效(這我不確定是不是大家都有發生)。因此我一開始的決定是「修改」程式，維持電路。</p><p>修改程式這個方案原本是覺得有可行性的，畢竟我也不熟悉(甚至沒玩過幾次) Arduino，修改總是比較方便一些。結果我點開程式一看，原來是義大利麵阿(很醜的程式碼)，我複製了一份 code，想辦法讀懂了程式碼。開始改了幾行，就放棄了，原本程式亂的太離譜了無法忍受(我 coding 有點潔癖)。結果回頭一看， duck 我改到的是原本的程式碼阿。完了沒有回頭路了，我只好砍掉重練。我從 Arduino 的 sample code 中，學會了一些基本語法和技巧。寫了一兩行測試的程式碼，接了簡單的電路，為了保險起見，先測試看看。X! 還沒接上伺服馬達訊號線，馬達自己動了起來，喔原來是因為晚上了阿…才怪(X Ooooops 完全笑不出來，這下程式碼不見了，我們的機器也壞了，我可以回家了。我請了大會協助檢查，大會回覆是:「接觸不良，公平起見，不予補發」。</p><p>謝囉:) 我很好。</p><p>這下子好了，原本覺得 72hr 寫點程式 so 簡單，突然開始覺得壓力山大，無力更大。剛好其他關主在我們大本營喇賽XD，所以我也不好意思直接砸鍵盤(x，於是就排了關卡解解瘀(跟比賽一定要尿尿概念差不多吧)。其實不只解解淤，在我們闖關的路上我們遇到了 救世主A(其實也沒有B) 找我們宣傳關卡，順便跟我們喇賽，我隨口說了我們 Arduino 的狀況(原本只是抱怨一下)，沒想到關主是技職體系電神，也隨口回說「接地問題」吧。當時沒想太多，跟他說了謝謝之類的吧，也沒想太多，闖了一個關卡，當時有點無心闖關，懸著問題沒解決。</p><p>回到大本營繼續測試電路，一下子就暢通了，第一個觀察是電源直接 Arduino 上而不是電源供應器是好的，第二個觀察是vcc 接在電供也是好的，又想到的關主說的「接地」，突然想通了，原來是電供的接地好像沒有真的很穩，於是把 Arduino 和電供接地接在一起就解決了。woooooo~~~~，豁然開朗，不過已經是三點還四點了，就把這份喜悅先放在自己這XD 我順勢研究了 BT 的程式語法，也順勢的寫了自己的控制界面和程式。兩塊大石頭突然變成兩塊蛋糕，我終於解決了 Arduino 本身的問題，也安心的睡著了。</p><blockquote><p>puzzle 小心得: 如果 puzzle I 是敘述不清楚、 puzzle II 就是顏色不清楚 &gt;&lt;<br>隔天一早起床吃早餐，順便解了 puzzle II，就開始繼續想主軸。進入了新的主軸階段: 設計機械結構，機構是為了解決問題、提供功能。我們主要有四個機構要解決的問題:</p><ol><li>小蜘蛛要在線上滑動</li><li>大蜘蛛要在旋轉台上旋轉</li><li>大蜘蛛要可以噴水</li><li>控制水從存水罐流出</li></ol></blockquote><p>於是我開始玩起馬達，沒過多久我就發現「玩」馬達這個動詞是問題本身，大會提供的都是玩具馬達，特色是高轉速低扭力，根本沒辦法做稍微有點負擔的工作。仔細看一下我們要解決的問題 1, 2, 4 感覺都需要不少力量。所以我把問題轉化到「輸出更大力量」。首先第一個想到的解，就是問問看可不可以拿魔法卡買大扭力馬達，得到了一個拒絕，大概是劉老老發動魔法卡無效化吧(其實他是回覆馬達非單一材料，只能購買線圈之類的)。於是我想到的第二個解是齒輪組。當然我有考慮過直接魔法卡買齒輪組，但仔細想想我好像沒真的看過那種東西，擔心買到的不合用所以也放棄了。順著第二個解，我想要構造第三個解:「手做齒輪組」。不過我們可購買材料中沒有齒輪，所以我就想到了滑輪加橡皮筋。</p><p>有了想法之後開始實作，第一個重點是根據經驗齒輪組類的東西支架非常重要，所以我選擇用木工支架，雖然製作成本變高也變麻煩，但是卻提供穩定的支撐，也方便固定在最後作品上<del>外加私心覺得木工很美</del>，於是我就找了 N 一起幫我做木工。第二個重點是滑輪本身，要高速旋轉的東西對稱是重點，要平衡才會真的穩定，所以我花了不少時間調整，也請手比較穩定的 S 幫我固定用兩個瓶蓋組合成的滑輪。經過了半個下午，「超大扭力馬達 v1.0」終於完成。滑輪半徑比估計有1:10 ~ 1:20 左右，一個是直接用馬達軸，另一個是用奶茶大杯蓋，輸出的力量明顯強了好幾倍，經過測試足夠捲起蜘蛛的線，讓他在線上滑動。</p><p>離主軸完成更進一步，但還是有一段路要走。這時候時間大概是最後 30hr，前兩個問題透過大扭力馬達解決，但一直想不出控制水的方式。這時候剛好輪到我們洗澡時間，感覺時間排的恰到好處，剛好遇到需要思考的問題，就有了一個適合的時間(也是比賽尿尿概念)。30min 的洗澡時間，我大概用了 10min，剩下的時間自己坐在門口長椅，不擅長搭話的我也沒有跟帶隊天使聊天，閉上眼睛開始思考… 然後… 就… 睡著了(x 不是啦!!! 我很認真的在想(? 而且是真的有想出個結論，而且我覺得蓋棒蓋簡潔的(自己說)。噴水的部份是用類似在寶特瓶戳洞靠壓力噴水，加上用連通管原理控制開關組合成的，雖然合起來像是垃圾，但其實我還蠻喜歡這個垃圾的&gt;&lt; 實作上用了一個寶貴的伺服馬達，簡潔的解了這個問題。(伺服馬達珍貴是因為買不到，而步進馬達可以蠻便宜的取得)</p><p>最後一塊…吧 的拼圖是水罐流水，這我也是想很久。思考過程沒什麼特別，首先是看到商店有 BB 彈，感覺可以用他代表水。接著想怎麼把他倒出罐子，一開始想到是在罐子開洞。可是要設計開關，放出 BB 彈實作複雜，再加上沒有動力的話 BB 彈會卡在洞口。最後解法是用甩的，透過強力的旋轉，洞口的 BB 彈因為沒有支撐力所以會飛出，這時只要在停止的時候洞口對著擋板，啟動時讓他瘋狂亂轉就成功了。最後的成品穩定性和表演性大概都是我心目中的 top1， 光是自己看就覺得格外抒壓。</p><blockquote><p>這之中我製造了一個假議題，浪費了一些時間用焊接省去杜邦線，最後才發現不需要，過程先不講了QAQ</p></blockquote><p>原本其實到這邊結束，是倒數 15 小時，是時候把設計好的東西組裝到作品上。沒想到發生了悲劇，這個悲劇我是很有經驗的，就是凡是跟現實世界扯上關係的，「曾經是好的」都是假的。3, 4 裝到作品上是好的， 但 1, 2 重新測試後不能運作了。我當下做出取捨，我覺得 1 是我比較期待的 feature，因此決定剩下的時間投資 1， 2 請 I and S 幫忙看看可不可以解決。2 最後的結論是選轉的起始角度，有特定的範圍可以增加成功率，失敗主要是摩擦力太大，我也沒辦法解決。 1 根據我的觀察，捲線時有點隨機，如果捲的不夠整齊，線會纏到最後越纏越緊直到馬達力量不夠。我大概花了 6 個小時，沒有解決。花越多時間，付出越都努力的東西，越是放不下。給自己的 dealine 一直踩一直延，過程中解決了一些其他的事(上面說的假議題)，最後在6 點最後下單時間的前十分鐘，我們有了新作法，「用重力拉動繩子」，又是一個奇妙的解，簡潔的在半小時內解決了問題(雖然效果沒有本來好)。</p><p>等等剛剛說 6 點(?， 對時間被小偷偷走了，剩下兩小時，還沒練習表演，還沒統一測試。要說遺憾，大概也是這兩小時吧。不是遺憾兩小時裡做的事，而是兩小時裡來不急做的事。我們的作品好像還沒有設計好精細的行銷策略，隨著推車推上了舞台。</p><h2 id="表演-與-結果"><a href="#表演-與-結果" class="headerlink" title="表演 與 結果"></a>表演 與 結果</h2><p>表演是評分的主要依據，要在台上實際示範我們的作品。一大清早 8:00 我們結束了製作，搬運作品到了舞台準備區。東西有點多，我們分了兩趟搬運，不過第二趟好像不需要我，我就留在準備區睡覺。轉眼間，輪到我們的表演時間。一上了台看起來一切都準備好了，作品上的電線，硬體都是在初始狀態。直到要連線搖桿的時候，我突然發現，server 放在大本營。搞笑了，一個遙控汽車沒有遙控器的概念。那時候剩五分鐘，規則不允許我們殺回大本營拿。有點慌張，整個當機了兩三秒，好不容易做好了，卻什麼都沒有，真想逃回新竹。不過冷靜下來後，還是決定不要放棄，硬著頭皮上舞台。雖然沒有控制用的 server，但因為已經跟電路板和繼電器相處了 72hr，簡單的手動控制馬達好像是我支援的操作。於是我們的表演進行著，只是在後台遙控的我，變成要在舞台上躲在邊邊不停接線控制。經過了混亂之後，彷彿一切結束了。評審 Q&amp;A 丟給我們了一個水題，大概是想讓我們發揮爭取分數。我們也隨便畫了大餅，說下次他會自己動起來。誰知道還有沒有下次阿，表演結束之後我們沈重的走回待了 72hr 的大本營。行李都打包好了，包了被我遺忘的 server 當作紀念。當時我完全對前三名晉級國際賽不抱希望，心裡只有後悔。</p><p>我們回到會場睡覺，補回三天不足的睡眠。突然，我們被隊輔搖醒:「晉級了！晉級了！晉級了！」。從睡夢中起來的我，黑人問號，誰晉級了？完全預料之外的好消息，又補充了我們的精神。把塞進書包的 server 拿了出來，我們馬上開始準備英文報告。國際賽有了 server， 大家也沒那麼慌亂，算不上一個完美的演出，但解開了我們的遺憾。</p><p>最後我們得了國內的第三名，國內賽表演驚慌失措的我們竟然拿了第三名，真是不幸中的大幸。</p><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>/<em> 有點打太多幹話了，今天來不及寫完 </em>/<br>/<em> 可以先看歷程喔 </em>/</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;門票&quot;&gt;&lt;a href=&quot;#門票&quot; class=&quot;headerlink&quot; title=&quot;門票&quot;&gt;&lt;/a&gt;門票&lt;/h2&gt;&lt;p&gt;對，我們進決賽了。雖然闖關分數普通，但是主軸任務第二名 (是說第一名有5000$)，所以順利晉級決賽。&lt;br&gt;關於背景規則什麼的，請見 「智
      
    
    </summary>
    
    
      <category term="競賽" scheme="https://blog.tommydong.life/tags/%E7%AB%B6%E8%B3%BD/"/>
    
      <category term="智慧鐵人" scheme="https://blog.tommydong.life/tags/%E6%99%BA%E6%85%A7%E9%90%B5%E4%BA%BA/"/>
    
      <category term="成長" scheme="https://blog.tommydong.life/tags/%E6%88%90%E9%95%B7/"/>
    
  </entry>
  
  <entry>
    <title>IONCamp 2019</title>
    <link href="https://blog.tommydong.life/2019/08/06/IONCamp-2019/"/>
    <id>https://blog.tommydong.life/2019/08/06/IONCamp-2019/</id>
    <published>2019-08-06T12:00:12.000Z</published>
    <updated>2020-04-16T01:13:39.858Z</updated>
    
    <content type="html"><![CDATA[<p>這個暑假是升高三的暑假，因為有暑輔的關係，所以沒有安排很多活動。暑輔的第二週，因為想多花些時間練習程式競賽，所以請假參加IONCamp。跟我同一屆的高二參加的人蠻少的，我認識的大概就是學長 UJ、同屆的崔OO、高一 joylintp、雙語部 Elliot &amp; Zane、高一學弟妹，HNO2、NJ都乖乖上暑輔去了。</p><p>雖然第一次看課表的時候，感覺多數的課程我都學過了，不過上課的時候我其實不太擅長多工練程式，所以多半還是乖乖聽課。</p><ul><li>第二天: 早上的課是真的基礎，下午我選了 DP 的初階課，主要是因為講師是 Jeffery Ho 學長，所以支持一下XD 講的很清楚，每題都堅持要現場 Code 標程ww 不過最後一題 permutation 真的本來就很難，最後 code 有 bug，但我實在是也看不出來QAQ</li><li>第三天: 早上我選了資料結構進階，內容真的非常喜歡，大概是最充實的課程前兩名。一開始教線段樹應用，帶了好幾題線段樹例題。很多題目都相當困難，需要一些觀察和技巧，處理、轉化成線段樹可以處理的問題。我突然發現自己資料結構技能可能還點太少了，要多花一些時間找題目練習。後來又教了一個回滾莫隊的技巧，雖然用到的機會不大，但也蠻有趣的。下午的圖論一開始被丟了一題很難的題目，其他跟去年差不多，最後講師才說那題目前沒有很好的解。</li><li>第四天: 這天的課都是 rareone 大大上的，早上的 string 有學到 suffix trie 的陣列版本，聽起來很好用要找機會實作。下午是計算幾何，計算幾何本身好像講的沒有很多，主要的 feature 是 Convex Hull Trick “s”， 加 s 是因為真的太多 Trick 了。聽起來超級精彩，集合拓展+時間線段樹可以作到 加線刪線凸包，超級炫泡的。</li><li>第五天: 早上是 greedy，跟去年好像差不多，大多在講證明。旁邊的睡了一片，我還是努力的把他聽完了XD。</li></ul><p>比賽總共比了五場，拿了4/5 rank1，掉的那天是 Day4。比賽狀況都不太記得了，真要回想的話:</p><ul><li>Day 1 唯一一次用 gedit + bash script 打的比賽</li><li>Day 2 印象 0</li><li>Day 3 贏很多，真的很多</li><li>Day 4 模板題很多，還直接送 code，但是 pB 實作題一直 0，最後好像 -20</li><li>Day 5 沒注意到有封版，最後以為大家都沒過，就也跟著耍廢，蠻驚險的(很餓)</li></ul><p>這次的營隊課程學到了不少，我也找到一些需要加強的地方。另外有一個建中的高一生還蠻厲害的，Scoreboard 一直看到他的名字，但我比較內向，最後一天才認出他。感覺非常有實力，明年有機會在選訓遇到。比賽的部份，前幾天 rank1 好像增加了一點點的信心，不過越到後面壓力越大，Day4 大概花了 1.5hr 砸一題其實蠻水的實作題，其實可以多花點時間打剩下幾題。結業式雙語部學弟跟我說覺得我變強很多，我自己的感覺是自己變穩定了。比賽除了實力之外，有一個很重要的是變異數，我其實花了很多功夫在縮小自己的變異數，看起來也是蠻有成效的。有機會再分享吧(最近有蠻多文章要打的XD)</p><blockquote><p>恭喜 BB and UT IOI 2019 Day 1 都 200+</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;這個暑假是升高三的暑假，因為有暑輔的關係，所以沒有安排很多活動。暑輔的第二週，因為想多花些時間練習程式競賽，所以請假參加IONCamp。跟我同一屆的高二參加的人蠻少的，我認識的大概就是學長 UJ、同屆的崔OO、高一 joylintp、雙語部 Elliot &amp;amp; Zan
      
    
    </summary>
    
    
      <category term="程式競賽" scheme="https://blog.tommydong.life/tags/%E7%A8%8B%E5%BC%8F%E7%AB%B6%E8%B3%BD/"/>
    
  </entry>
  
  <entry>
    <title>智慧鐵人 2019 複賽</title>
    <link href="https://blog.tommydong.life/2019/07/12/%E6%99%BA%E6%85%A7%E9%90%B5%E4%BA%BA-2019-%E8%A4%87%E8%B3%BD/"/>
    <id>https://blog.tommydong.life/2019/07/12/智慧鐵人-2019-複賽/</id>
    <published>2019-07-12T02:57:45.000Z</published>
    <updated>2020-04-16T01:13:39.858Z</updated>
    
    <content type="html"><![CDATA[<h2 id="智慧鐵人介紹"><a href="#智慧鐵人介紹" class="headerlink" title="智慧鐵人介紹"></a>智慧鐵人介紹</h2><p>智鐵是一個高中生的團隊競賽，透過知識、推理、體能來解決問題。知識的部份範圍蠻廣的，文理時事都有。有一個大方向的規則就是，沒有說不行就是可以，希望我們可以發揮創意，合作解決問題。</p><h3 id="初賽"><a href="#初賽" class="headerlink" title="初賽"></a>初賽</h3><p>初賽是8hr，有三題分別是實作、文本、體能，實作的部份就是要你實做出一個滿足題目條件的裝置，文本就是用一堆知識性題目加上一些推理，體能就是製作道具用一些奇怪的肢體動作完成任務。</p><p>我們在初賽的時候，實作拿了全國最高分(100)，文本分數35 分，體能76 分。初賽有一張魔法卡，可以把單題 double，但要在作答開始之前使用。結果我們放在了文本，真的有夠慘，不過最後還是有進複賽ww</p><h3 id="複賽"><a href="#複賽" class="headerlink" title="複賽"></a>複賽</h3><p>複賽是 24hr，有主軸任務和闖關個占一半成績，闖關總共有六關，各30～40 分鐘，剩下時間就是主軸任務，通常都是要透過有限虛擬貨幣購買材料，實作一個裝置，錄製影片和製作 ppt 來評分。</p><h2 id="紀錄"><a href="#紀錄" class="headerlink" title="紀錄"></a>紀錄</h2><p>我們今年是第二次參加智鐵，我們其實總共有 12 個左右的人要參加最後分散到兩隊，不過今年剛好資優班的撞到成發，所以我們剩下的人就組了一對參加。我們隊比較算是業餘的，沒有什麼特別的準備，只是對這種活動有興趣就參加了。去年候補的我們，今年有稍微進(變)步(賽)一點，拿到順利晉級的門票。</p><h3 id="主軸任務"><a href="#主軸任務" class="headerlink" title="主軸任務"></a>主軸任務</h3><p>複賽今年的主軸是要透過光影呈現漢字流變，從兩個現有文字重構出一個新的文字，並以故事串連，由光影效果呈現在宣紙上錄製成影片。我們每隊會被分配到一間教室，要用 (24hr - 闖關時間)來完成。一開始我們進教室，先檢查了材料，發現電腦有很多問題，第一個是電腦會漏電，我被電了三次QAQ，第二個是喇叭完全都是雜訊。於是我們請大會處理，雖然花上一些時間，不過最後問題有被解決。之後我們開始構想我們要呈現的主題，我們找了「類」和「國」作為素材，原因是他們的部件很多，比較好發揮。大概經過了三小時的討論，我們的故事有了一個模型，對劇本和特效有初步規劃，於是趕緊開始訂購材料進行實作。</p><p>實作上因為這次是要用影子呈現，所以其實表面美觀並不是很重要(因為被打到宣紙上是平面又是黑白的)，所以實作上是以功能為主。進行了一陣子的實作，就到了我們的闖關時間，一回來就是半夜 2 點。隊員有些回來因為疲倦所以睡著了，剩我和隊長好像體力還行，就繼續施工不敢浪費任何時間。我趁著剛闖完關，有點混亂的時候列出了 TODO list。接著又是漫長的施工時間，一直到了日出的時間， TODO list 總算是勉強清空，大方向物件完成。</p><p>之後我們把大家叫起來，完成剩下的細節，我也排好了最後表演的人力時間表。分配了表演的工作後，我終於安心的趴在桌子上睡著了。一趴下去，是很深層的睡著，對於時間好像沒什麼感覺，畢竟從第一天早上 6 點起床趕車到第二天的 9 點，是我最久的連續不睡眠紀錄，對於我這種平常沒熬夜的人，真是非常的挑戰。醒來之後疲倦雖然沒有完全消除，但有減少了許多，根據他們的說法我睡了 30 分鐘XD。</p><p>最後是不斷的排練，我們一開始根本表演的非常凌亂，經過一次又一次的修改調整,我們終於有了順暢的表演。最後的錄製也還算成功，剩下的就是看評分囉。</p><h3 id="闖關"><a href="#闖關" class="headerlink" title="闖關"></a>闖關</h3><p>闖關從 21:00 ~ 2:00，總共有 6 個關。每一關一開始都會有規則介紹，接著進行闖關。第一關我們有點太亢奮，在一個黑暗的關卡，規則一聽完，還不是非常清楚就直接開始了闖關。結果真的非常悽慘，只拿了 50 分，跟當時最高分 960 有非常懸殊的差距，當然也有部份是因為那關的問題都是歷史相關，而我們這隊是純理組本來就有劣勢。</p><p>第二關我們有所調整，聽完規則說明後，在開始闖關前還是繼續理解題目，一起討論，才開始行動。雖然成績沒有特別高，但至少慢慢進入狀況。</p><p>第三關開始，我們的狀況就起飛了，每關都有中上的成績，甚至有一兩關拿到當前前三的成績。趣事: 其中有一關是中藥題，要透過關卡提供的線索，了解病人需要的湯藥，閱讀對各藥材的介紹，解出數學問題，配出湯藥。結果在評分時需要核對我們放的藥材是不是湯藥的正確藥材，結果關主沒有拿任何資料，轉了一圈藥材，就判斷每個湯裡放的要是不是正確，超猛的。後來透過其他關主才了解，原來那個關主是陽明的中藥大神。</p><p>每個關卡的佈置都非常的精美，聽說關主們場佈花了十天才完成。真的非常感謝那些關主設計出的關卡，每個都非常有趣用心。一開始很多關主有認出我們是第一次參加複賽，也都很熱心的指導我們如何改進。不過到後來可能是我們也有進步，所以就沒被認出來了XD</p><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>智慧鐵人蠻好玩的，每個關卡或是活動都需要思考蠻有挑戰的。複賽是免費的，還有提供餐點。而複賽的工作人員也大多是志工，非常的熱情，關主的關卡非常巧妙，小天使也很有善，提供我們協助。</p><p>參加智鐵對我來說，雖然我不在意獎金(因為很難得到)、也不一定會拿來當什麼特別經歷介紹，但對我來說蠻重要的。大家都說我很不一樣，光是在科學班就有點奇怪，而且在科學班又主要是在打競賽，更是怪中怪，隊友都說我的高中生活和他們是不同世界的。而我完全同意，不得不承認我平常關在的同溫層，跟平均高中生真的是完全不一樣的世界。參加智慧鐵人，讓我也有一點點的機會透透氣，學習和大家團隊合作，學習友善的溝通。</p><h2 id="後記-對呼"><a href="#後記-對呼" class="headerlink" title="後記: 對呼"></a>後記: 對呼</h2><p>我們有對呼比賽，每隊在開場要表演對呼。其中會被評審評分占 5 分，另外會有對呼人氣票選，最高的可以獲得獎金 2000 元。結果智鐵結束看到 Sean 的訊息，說 google form 的回應可以直接發一個 request 完成。於是可以暴力的重發，直接刷起來，誰叫智鐵沒有限制用 email 提交表單。如果有拿到獎金來請 Sean 吃飯好了XD</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;智慧鐵人介紹&quot;&gt;&lt;a href=&quot;#智慧鐵人介紹&quot; class=&quot;headerlink&quot; title=&quot;智慧鐵人介紹&quot;&gt;&lt;/a&gt;智慧鐵人介紹&lt;/h2&gt;&lt;p&gt;智鐵是一個高中生的團隊競賽，透過知識、推理、體能來解決問題。知識的部份範圍蠻廣的，文理時事都有。有一個大方向
      
    
    </summary>
    
    
      <category term="競賽" scheme="https://blog.tommydong.life/tags/%E7%AB%B6%E8%B3%BD/"/>
    
      <category term="智慧鐵人" scheme="https://blog.tommydong.life/tags/%E6%99%BA%E6%85%A7%E9%90%B5%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>APCS JUNE19</title>
    <link href="https://blog.tommydong.life/2019/06/15/APCS-JUNE19/"/>
    <id>https://blog.tommydong.life/2019/06/15/APCS-JUNE19/</id>
    <published>2019-06-15T07:17:01.000Z</published>
    <updated>2020-04-16T01:13:39.855Z</updated>
    
    <content type="html"><![CDATA[<p>因為上次沒考到筆試，所以我又來考了一次APCS….<br>上次考有點水，第四題是0-1背包問題。然後最近這幾場有變難的趨勢，所以也想說順便寫寫上機。<br>結果沒想到竟然是四個實作題，每次我好像都遇到比較簡單的上機QAQ</p><p>pA 給你兩場比賽兩籃球隊四節各自得分，輸出比數和勝負<br>pB 輸入一個二維陣列，要求從最小開始每次往四方向最小的走，不能走重複的格子，求路徑數字合<br>pC 給n 個集合，問有幾組互補集合 (n &lt;= 2e5 ? {元素} &lt;＝ 26)<br>pD 給一維長度為n 的陣列，元素集合大小是m， 求長度為m 包含所有元素的子區間數量 (n,m &lt;= 2e5)</p><p>====爆雷線====爆雷線====爆雷線====爆雷線====爆雷線====爆雷線====爆雷線====爆雷線=====</p><p>pA 實作<br>pB dfs<br>pC 我用 bitset 只用 20+ 行<br>pD 先離散化之後再枚舉右界，開一個陣列存個元素在長度為 m 的區間出現幾次，紀錄目前區間有幾種元素</p><blockquote><p>冷知識 apcs 環境 alias {各種指令}=”printf ‘’”</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;因為上次沒考到筆試，所以我又來考了一次APCS….&lt;br&gt;上次考有點水，第四題是0-1背包問題。然後最近這幾場有變難的趨勢，所以也想說順便寫寫上機。&lt;br&gt;結果沒想到竟然是四個實作題，每次我好像都遇到比較簡單的上機QAQ&lt;/p&gt;
&lt;p&gt;pA 給你兩場比賽兩籃球隊四節各自得分
      
    
    </summary>
    
    
      <category term="程式競賽" scheme="https://blog.tommydong.life/tags/%E7%A8%8B%E5%BC%8F%E7%AB%B6%E8%B3%BD/"/>
    
      <category term="APCS" scheme="https://blog.tommydong.life/tags/APCS/"/>
    
  </entry>
  
  <entry>
    <title>Django deploy</title>
    <link href="https://blog.tommydong.life/2019/05/18/Django-deploy/"/>
    <id>https://blog.tommydong.life/2019/05/18/Django-deploy/</id>
    <published>2019-05-18T02:05:53.000Z</published>
    <updated>2020-04-16T01:13:39.855Z</updated>
    
    <content type="html"><![CDATA[<p>這是 django deploy 的小筆記，之前弄了很久，後來照著 digitalocean 的教學終於弄好了，紀錄一下。環境是 ubuntu 16.04 on gcp。用了 gunicorn 當作 nginx 與 django 的界面，psycopg2 當作 postgres 與 django 的界面。</p><h2 id="紀錄"><a href="#紀錄" class="headerlink" title="紀錄"></a>紀錄</h2><h3 id="install-packages"><a href="#install-packages" class="headerlink" title="install packages"></a>install packages</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install python3-pip python3-dev libpq-dev postgresql postgresql-contrib nginx</span><br></pre></td></tr></table></figure><h3 id="create-postgres-database-and-user"><a href="#create-postgres-database-and-user" class="headerlink" title="create postgres database and user"></a>create postgres database and user</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u postgres psql</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE piweb;</span><br><span class="line">CREATE USER tommydong WITH PASSWORD &apos;********&apos;;</span><br><span class="line">ALTER ROLE tommydong SET client_encoding TO &apos;utf8&apos;;</span><br><span class="line">ALTER ROLE tommydong SET default_transaction_isolation TO &apos;read committed&apos;;</span><br><span class="line">ALTER ROLE tommydong SET timezone TO &apos;UTC&apos;;</span><br><span class="line">GRANT ALL PRIVILEGES ON DATABASE piweb TO tommydong;</span><br></pre></td></tr></table></figure><h3 id="install-python-package-in-virtualenv"><a href="#install-python-package-in-virtualenv" class="headerlink" title="install python package in virtualenv"></a>install python package in virtualenv</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django gunicorn psycopg2</span><br></pre></td></tr></table></figure><h3 id="setting-py"><a href="#setting-py" class="headerlink" title="setting.py"></a>setting.py</h3><p>Add your pi to ALLOW_HOST</p><p>Then setup the database<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    &apos;default&apos;: &#123;</span><br><span class="line">        &apos;ENGINE&apos;: &apos;django.db.backends.postgresql_psycopg2&apos;,</span><br><span class="line">        &apos;NAME&apos;: &apos;piweb&apos;,</span><br><span class="line">        &apos;USER&apos;: &apos;tommydong&apos;,</span><br><span class="line">        &apos;PASSWORD&apos;: &apos;********&apos;,</span><br><span class="line">        &apos;HOST&apos;: &apos;localhost&apos;,</span><br><span class="line">        &apos;PORT&apos;: &apos;&apos;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Set the statics<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">STATIC_URL = &apos;/static/&apos;</span><br><span class="line">STATIC_ROOT = os.path.join(BASE_DIR, &apos;static/&apos;)</span><br></pre></td></tr></table></figure></p><h3 id="test-server"><a href="#test-server" class="headerlink" title="test server"></a>test server</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gunicorn --bind 0.0.0.0:8080 pi_official.wsgi</span><br></pre></td></tr></table></figure><h3 id="create-systemd-service-file"><a href="#create-systemd-service-file" class="headerlink" title="create systemd service file"></a>create systemd service file</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/systemd/system/gunicorn.service</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=gunicorn daemon</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=tmd910607</span><br><span class="line">Group=www-data</span><br><span class="line">WorkingDirectory=/home/tmd910607/pi-official</span><br><span class="line">ExecStart=/home/tmd910607/pi-official/pienv/bin/gunicorn --access-logfile - --workers 3 --bind unix:/home/tmd910607/pi-official/pi_official.sock pi_official.wsgi:application</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start gunicorn</span><br><span class="line">sudo systemctl enable gunicorn</span><br></pre></td></tr></table></figure><h3 id="configure-nginx"><a href="#configure-nginx" class="headerlink" title="configure nginx"></a>configure nginx</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/nginx/sites-available/piweb</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name 35.231.102.215;</span><br><span class="line"></span><br><span class="line">    location = /favicon.ico &#123; access_log off; log_not_found off; &#125;</span><br><span class="line">    location /static/ &#123;</span><br><span class="line">        root /home/tmd910607/pi-official;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        include proxy_params;</span><br><span class="line">        proxy_pass http://unix:/home/tmd910607/pi-official/pi_official.sock;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /etc/nginx/sites-available/piweb /etc/nginx/sites-enabled</span><br></pre></td></tr></table></figure><h2 id="教學原文"><a href="#教學原文" class="headerlink" title="教學原文"></a>教學原文</h2><p><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-16-04" target="_blank" rel="noopener">How To Set Up Django with Postgres, Nginx, and Gunicorn on Ubuntu 16.04</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;這是 django deploy 的小筆記，之前弄了很久，後來照著 digitalocean 的教學終於弄好了，紀錄一下。環境是 ubuntu 16.04 on gcp。用了 gunicorn 當作 nginx 與 django 的界面，psycopg2 當作 postgr
      
    
    </summary>
    
    
      <category term="server" scheme="https://blog.tommydong.life/tags/server/"/>
    
      <category term="Django" scheme="https://blog.tommydong.life/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>TOI2019 選訓營心得</title>
    <link href="https://blog.tommydong.life/2019/03/31/TOI2019-%E9%81%B8%E8%A8%93%E7%87%9F%E5%BF%83%E5%BE%97/"/>
    <id>https://blog.tommydong.life/2019/03/31/TOI2019-選訓營心得/</id>
    <published>2019-03-31T14:25:14.000Z</published>
    <updated>2020-04-16T01:13:39.858Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>TOI 是台灣的資訊奧林匹亞的選訓營，是為了培訓資訊競賽選手參加奧林匹亞比賽而設立的研習營。今年我透過海選取得了參加的資格，就踏入了師大體驗了兩個禮拜的選訓營生活。</p><h2 id="選訓營的生活"><a href="#選訓營的生活" class="headerlink" title="選訓營的生活"></a>選訓營的生活</h2><p>選訓營的作息很固定，幾乎每天早上下午各一堂課，晚上則是自習時間。</p><p>課程大部份其實是進入選訓營就必須具備的內容，不過教授們也都很了解，所以幾乎都允許我們可以依照自己需求自主練習。其中有一堂課令我印象深刻，交大資工系的蔡孟宗教授的 Graphs。不斷的丟出許多有趣的圖論題，引發我們熱烈的討論和思考。也教了蠻多理論，我學了很多，真想多聽個幾堂&gt;&lt;。</p><p>晚上比較休閒，都沒有排課，本來是打算每天揪團去跑步，不過沒想到跑了幾天就斷掉了。住宿是在師大本部的師大會館，每天都有公車接送，環境還不錯，比較慘的是浴巾一個禮拜才換一次，到最後有點溼。</p><p>參加選訓營還有一個很重要的活動-模考。模考其實就是選訓營的考試，決定著我們是否能前進下一個階段。一二階段各考兩次，大多在星期六，長四小時的比賽每場四題。難度上比入營考難，應該是選訓營中最刺激的時候了。</p><h2 id="競賽、學習"><a href="#競賽、學習" class="headerlink" title="競賽、學習"></a>競賽、學習</h2><p>選訓營是選手們切磋的地方，不過跟普遍認知的「比賽」卻不太一樣。一般比賽大概就是想辦法戰勝對手，取得自己最佳利益。但選訓營不是這樣運作的，大多的人都很樂於幫助其他的選手，或分享自己的知識。因為在選訓營並不是只有戰勝對手，而更重要的自己的學習成長，所以封閉自己就不是一個好策略。跟其他選手的交流，大概是選訓營中學習的主要來源吧。</p><h2 id="我的模考"><a href="#我的模考" class="headerlink" title="我的模考"></a>我的模考</h2><p>模考一共有兩次。第一次模考我花了大概一個半小時解了一題，之後看到了一題樹的題目，想到了兩個解法，選了一個開始寫。但賽中我並沒有發現自己是假解，TLE了好幾次以為自己是常數太大，不斷的壓常數。時間一下子就到了比賽末段，開始很慌張，沒有先拿好部份分的我，又陷入了部份分與這題的兩難情境。最後雖然選擇了繼續跟這題奮戰，但沒能拿下，排名16。</p><p>第二次模考我換了一點策略，以打部份分為優先，剩下時間在想辦法拼滿分。比賽一開始，翻了翻題目，發現看起來有些困難，甚至連部份分都拿的不是很多。其中有一題賽中想到一題解法的輪廓，但細節一直沒有好好整理出來，加上一模的經驗，最後沒有上傳任何一次QQ。到了最後一題都沒有解出來，悲慘，排名維持16，進不了二階。</p><p>之後在電神的貼文留言看到了教授的評論，說覺得很多人「患得患失」。感覺被說中了，我在比賽的壓力中，常常得失心很重。怕錯過機會，怕犯同樣的錯，怕輸。常常被這種心態限制，無法做出冷靜的選擇。不過兩次模考都維持在 16 名，或許今年的實力就差不多在這裡了吧！沒有打得很理想，但也不算太糟糕。</p><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>期待了一年半，終於參加了一次選訓營。從 2017 的 8 月到現在，我經歷了好多比賽，很多高興和失落，許多場的比賽的印象都還很深刻。去年的這個時候，因為入營考落選感到沮喪。今年順利的通過入營考，卻又停在一階，不過我已經不再沮喪了。我知道我努力了，所以我沒有後悔。我知道我能力還不夠，所以我有繼續學習的希望。</p><p>TOI 2019 完。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;TOI 是台灣的資訊奧林匹亞的選訓營，是為了培訓資訊競賽選手參加奧林匹亞比賽而設立的研習營。今年我透過海選取得了參加的資格，就踏入了師大體驗
      
    
    </summary>
    
    
      <category term="程式競賽" scheme="https://blog.tommydong.life/tags/%E7%A8%8B%E5%BC%8F%E7%AB%B6%E8%B3%BD/"/>
    
      <category term="TOI" scheme="https://blog.tommydong.life/tags/TOI/"/>
    
  </entry>
  
</feed>
